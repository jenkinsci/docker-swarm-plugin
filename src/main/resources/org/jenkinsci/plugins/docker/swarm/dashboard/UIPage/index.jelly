<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler"
    xmlns:l="/lib/layout">
    <l:layout title="Docker Swarm Status" type="one-column">
        <j:set var="dbrd" value="${it.dashboard}" />
        <l:main-panel>
            <div id="contentDiv">
                <div class="content-container">
                    <div class="clr-row">
                        <div class="clr-col-4">
                            <div class="card info-block">
                                <div class="card-header">
                                    System Overview
                                </div>
                                <div class="card-block">
                                    <div class="card-text">
                                        <div class="clr-row">
                                            <div class="clr-col-6">
                                                <div class="chart-container" style="min-height: 250px;">
                                                    <canvas id="cpu-usage-chart"></canvas>
                                                </div>
                                            </div>
                                            <div class="clr-col-6">
                                                <div class="chart-container" style="min-height: 250px;">
                                                    <canvas id="mem-usage-chart"></canvas>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <st:include page="swarm-queue.jelly"/>
                            </div>
                        </div>
                        <div class="clr-col-8">
                            <st:include page="swarm-status.jelly"/>
                        </div>
                    </div>
                </div>
            </div>
            <div id="shadowElement">
            </div>
            <script>
                // Build and attach the shadowDOM
                const header = document.getElementById('shadowElement');
                const shadowRoot = header.attachShadow({mode: 'open'});

                // Get the html that should be added to the shadow dom
                var contentDiv = document.getElementById('contentDiv');
                var html = contentDiv.innerHTML;
                contentDiv.remove();

                // Add the base elements to the shadowDOM
                var shadowHtmlElement = document.createElement('html');
                var shadowBodyElement = document.createElement('body');
                shadowBodyElement.innerHTML = html;
                shadowHtmlElement.appendChild(shadowBodyElement);

                // Add styles to the shadowDOM
                addCss(shadowRoot, '${resURL}/plugin/docker-swarm/css/clr-ui.min.css');
                addCss(shadowRoot, '${resURL}/plugin/docker-swarm/css/clr-icons.min.css');
                addCss(shadowRoot, '${resURL}/plugin/docker-swarm/css/custom-styles.css');

                // Append the content element to the shadowDOM
                shadowRoot.appendChild(shadowHtmlElement);

                // Add scripts to the shadowDOM
                addScript(shadowRoot, '${resURL}/plugin/docker-swarm/js/clr-icons.min.js');
                addScript(shadowRoot, '${resURL}/plugin/docker-swarm/js/Chart.min.js');
                addScript(shadowRoot, '${resURL}/plugin/docker-swarm/js/chartjs-plugin-datalabels.js');
                const lastScript = addScript(shadowRoot, '${resURL}/plugin/docker-swarm/js/custom-script.js');

                // Wait until the script is loaded and then draw the charts
                lastScript.addEventListener('load', () => {
                    // Draw the charts
                    drawCpuChart(shadowRoot, ${dbrd.cpuUsage});
                    drawMemoryChart(shadowRoot, ${dbrd.memoryUsage});
                    <j:forEach items="${dbrd.nodes}" var="node">
                        drawNodeCpuChart(shadowRoot, '${node.name}', ${node.cpuUsageJson});
                        drawNodeMemoryChart(shadowRoot, '${node.name}', ${node.memoryUsageJson});
                    </j:forEach>
                });

                function addCss(element, url) {
                    let link = document.createElement('link');
                    link.setAttribute('rel', 'stylesheet');
                    link.setAttribute('href', url);
                    element.appendChild(link);
                    return link;
                }
                
                function addScript(element, url) {
                    var script = document.createElement('script');
                    script.setAttribute('type', 'text/javascript');
                    script.setAttribute('src', url);
                    script.async = false;
                    element.appendChild(script);
                    return script;
                }
            </script>
        </l:main-panel>
    </l:layout>
</j:jelly>
